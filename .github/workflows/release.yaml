name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            platform: linux
            arch: x64
            artifact_name: tracetap-linux-x64
            cert_script: chrome-cert-manager.sh
          - os: macos-13  # Intel Mac
            platform: macos
            arch: x64
            artifact_name: tracetap-macos-x64
            cert_script: macos-cert-manager.sh
          - os: macos-14  # M1/M2 (Apple Silicon)
            platform: macos
            arch: arm64
            artifact_name: tracetap-macos-arm64
            cert_script: macos-cert-manager.sh
          - os: windows-latest
            platform: windows
            arch: x64
            artifact_name: tracetap-windows-x64.exe
            cert_script: windows-cert-manager.ps1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        run: python build_executables.py

      - name: List release files (Unix)
        if: runner.os != 'Windows'
        run: ls -lh release/

      - name: List release files (Windows)
        if: runner.os == 'Windows'
        run: dir release\

      - name: Test executable (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x release/${{ matrix.artifact_name }}
          timeout 5 release/${{ matrix.artifact_name }} --help || true

      - name: Test executable (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Start-Process -FilePath "release\${{ matrix.artifact_name }}" -ArgumentList "--help" -Wait -NoNewWindow -ErrorAction SilentlyContinue

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.platform }}-${{ matrix.arch }}
          path: release/${{ matrix.artifact_name }}
          retention-days: 5

      - name: Upload cert script artifact (Unix)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: cert-script-${{ matrix.platform }}
          path: ${{ matrix.cert_script }}
          retention-days: 5

      - name: Upload cert script artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: cert-script-${{ matrix.platform }}
          path: ${{ matrix.cert_script }}
          retention-days: 5

  build-tools:
    name: Build Tools
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build tracetap2wiremock executable
        run: |
          pip install pyinstaller
          pyinstaller --onefile --name tracetap2wiremock tracetap2wiremock.py

      - name: Upload tool artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools
          path: |
            dist/tracetap2wiremock
            tracetap2wiremock.py
          retention-days: 5

  release:
    name: Create Release
    needs: [build, build-tools]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Display structure
        run: ls -R artifacts/

      - name: Prepare release files
        run: |
          mkdir -p release
          
          # Copy executables
          find artifacts/executable-* -type f -exec cp {} release/ \;
          
          # Copy cert scripts
          find artifacts/cert-script-* -type f -exec cp {} release/ \;
          
          # Copy tools
          cp artifacts/tools/* release/ || true
          
          # Copy documentation
          cp README.md release/ || true
          cp QUICK_START.md release/ || true
          cp CERTIFICATE_INSTALLATION.md release/ || true
          cp PLATFORM_COMPARISON.md release/ || true
          cp WIREMOCK_WORKFLOW.md release/ || true
          
          # Make scripts executable
          chmod +x release/*.sh || true
          
          ls -lh release/

      - name: Create checksums
        run: |
          cd release
          sha256sum tracetap-* *.sh *.ps1 2>/dev/null > checksums.txt || true
          cat checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## üì¶ Downloads
            
            ### Executables (No Python Required)
            
            **Linux:**
            - `tracetap-linux-x64` - Linux x86_64
            - `chrome-cert-manager.sh` - Certificate installer
            
            **macOS:**
            - `tracetap-macos-x64` - macOS Intel (x86_64)
            - `tracetap-macos-arm64` - macOS Apple Silicon (M1/M2/M3)
            - `macos-cert-manager.sh` - Certificate installer
            
            **Windows:**
            - `tracetap-windows-x64.exe` - Windows x64
            - `windows-cert-manager.ps1` - Certificate installer
            
            **Tools:**
            - `tracetap2wiremock` - WireMock stub generator (Linux executable)
            - `tracetap2wiremock.py` - WireMock stub generator (Python script, cross-platform)
            
            ---
            
            ## üöÄ Quick Start
            
            ### 1. Download for Your Platform
            
            Download the appropriate files for your OS (executable + cert script).
            
            ### 2. Install Certificate (One-time)
            
            **Linux:**
            ```bash
            chmod +x chrome-cert-manager.sh
            ./chrome-cert-manager.sh install
            ```
            
            **macOS:**
            ```bash
            chmod +x macos-cert-manager.sh
            ./macos-cert-manager.sh install
            ```
            
            **Windows:**
            ```powershell
            powershell -ExecutionPolicy Bypass .\windows-cert-manager.ps1 install
            ```
            
            ### 3. Run TraceTap
            
            **Linux:**
            ```bash
            chmod +x tracetap-linux-x64
            ./tracetap-linux-x64 --listen 8080 --raw-log captures.json --export postman.json
            ```
            
            **macOS:**
            ```bash
            chmod +x tracetap-macos-*
            ./tracetap-macos-x64 --listen 8080 --raw-log captures.json --export postman.json
            ```
            
            **Windows:**
            ```powershell
            .\tracetap-windows-x64.exe --listen 8080 --raw-log captures.json --export postman.json
            ```
            
            ### 4. Configure Browser Proxy
            
            - Install FoxyProxy extension
            - Add proxy: `localhost:8080`
            - Enable proxy
            - Browse HTTPS sites - no warnings! ‚úÖ
            
            ### 5. Convert to WireMock Stubs
            
            ```bash
            # Using Python script (all platforms)
            python tracetap2wiremock.py captures.json --output wiremock/mappings/
            
            # Or using Linux executable
            ./tracetap2wiremock captures.json --output wiremock/mappings/
            ```
            
            ---
            
            ## üìö Documentation
            
            - `QUICK_START.md` - Complete setup guide
            - `CERTIFICATE_INSTALLATION.md` - Detailed cert installation
            - `PLATFORM_COMPARISON.md` - Platform differences
            - `WIREMOCK_WORKFLOW.md` - WireMock integration guide
            
            ## üîê Security
            
            - For local development/testing only
            - Remove certificate when done: `./cert-manager-* remove`
            - See `CERTIFICATE_INSTALLATION.md` for security notes
            
            ## ‚úÖ Verify Downloads
            
            Check `checksums.txt` to verify file integrity.
            
            ---
            
            **Need help?** Check the documentation or open an issue!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}