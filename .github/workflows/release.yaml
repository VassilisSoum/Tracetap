name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            arch: x64
            artifact_name: tracetap-linux-x64
            cert_script: chrome-cert-manager.sh
          - os: macos-13
            platform: macos
            arch: x64
            artifact_name: tracetap-macos-x64
            cert_script: macos-cert-manager.sh
          - os: macos-14
            platform: macos
            arch: arm64
            artifact_name: tracetap-macos-arm64
            cert_script: macos-cert-manager.sh
          - os: windows-latest
            platform: windows
            arch: x64
            artifact_name: tracetap-windows-x64.exe
            cert_script: windows-cert-manager.ps1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        run: python build_executables.py

      - name: List release files (Unix)
        if: runner.os != 'Windows'
        run: ls -lh release/

      - name: List release files (Windows)
        if: runner.os == 'Windows'
        run: dir release\

      - name: Test executable (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x release/${{ matrix.artifact_name }}
          timeout 5 release/${{ matrix.artifact_name }} --help || true

      - name: Test executable (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Start-Process -FilePath "release\${{ matrix.artifact_name }}" -ArgumentList "--help" -Wait -NoNewWindow -ErrorAction SilentlyContinue

      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.platform }}-${{ matrix.arch }}
          path: release/${{ matrix.artifact_name }}
          retention-days: 5

      - name: Upload cert script artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert-script-${{ matrix.platform }}-${{ matrix.arch }}
          path: ${{ matrix.cert_script }}
          retention-days: 5

  build-tools:
    name: Build Tools
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build tracetap2wiremock executable
        run: |
          pip install pyinstaller
          pyinstaller --onefile --name tracetap2wiremock tracetap2wiremock.py
      - name: Upload tool artifact
        uses: actions/upload-artifact@v4
        with:
          name: tools
          path: |
            dist/tracetap2wiremock
            tracetap2wiremock.py
          retention-days: 5

  release:
    name: Create Release
    needs: [build, build-tools]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Display structure
        run: |
          echo "=== Artifact structure ==="
          ls -R artifacts/
          echo ""
          echo "=== All files ==="
          find artifacts/ -type f

      - name: Prepare release files
        run: |
          mkdir -p release
          
          # Copy all files from artifact subfolders to release folder
          find artifacts/ -type f -exec cp {} release/ \;
          
          # Make scripts and executables executable
          chmod +x release/*.sh 2>/dev/null || true
          chmod +x release/tracetap-* 2>/dev/null || true
          
          echo "=== Files in release folder ==="
          ls -lh release/

      - name: Create checksums
        run: |
          cd release
          sha256sum * > checksums.txt 2>/dev/null || true
          cat checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## üöÄ TraceTap Release ${{ github.ref_name }}
            
            HTTP/HTTPS traffic capture with AI-powered Postman export.
            
            ## üì¶ Downloads
            
            Choose your platform:
            
            - **Linux (x64):** `tracetap-linux-x64`
            - **macOS (Intel):** `tracetap-macos-x64`
            - **macOS (Apple Silicon):** `tracetap-macos-arm64`
            - **Windows (x64):** `tracetap-windows-x64.exe`
            
            ## üîê Certificate Installation
            
            Before using TraceTap, install the certificate:
            
            **Linux:**
            ```bash
            chmod +x chrome-cert-manager.sh
            ./chrome-cert-manager.sh install
            ```
            
            **macOS:**
            ```bash
            chmod +x macos-cert-manager.sh
            ./macos-cert-manager.sh install
            ```
            
            **Windows:**
            ```powershell
            powershell -ExecutionPolicy Bypass .\windows-cert-manager.ps1 install
            ```
            
            ## üöÄ Quick Start
            
            ```bash
            # Make executable (Linux/macOS)
            chmod +x tracetap-linux-x64
            
            # Start capturing
            ./tracetap-linux-x64 --listen 8080 --raw-log capture.json
            
            # Configure proxy
            export HTTP_PROXY=http://localhost:8080
            export HTTPS_PROXY=http://localhost:8080
            
            # Use your app - traffic is captured!
            # Press Ctrl+C to stop and export
            ```
            
            ## üêõ Issues?
            
            [Report bugs or request features](https://github.com/VassilisSoum/tracetap/issues)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}